# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Base

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  QINIU_DART_SDK_ACCESS_KEY: ${{ secrets.QINIU_DART_SDK_ACCESS_KEY }}
  QINIU_DART_SDK_SECRET_KEY: ${{ secrets.QINIU_DART_SDK_SECRET_KEY }}
  QINIU_DART_SDK_TOKEN_SCOPE:  ${{ secrets.QINIU_DART_SDK_TOKEN_SCOPE }}

jobs:
  base:
    strategy:
      matrix:
        sdk: [2.18.0, stable]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: base

    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}

      - if: true
        run: echo "Test if"

      - if: startsWith(env.QINIU_DART_SDK_TOKEN_SCOPE, 'dart-sdk-test')
        run: echo "QINIU_DART_SDK_TOKEN_SCOPE is dart-sdk-test"

      - if: startsWith(env.QINIU_DART_SDK_ACCESS_KEY, 'IAM')
        run: echo "QINIU_DART_SDK_ACCESS_KEY is IAM"

      - name: Install dependencies
        run: dart pub get

      - name: Analyze project source
        run: dart analyze --fatal-warnings --fatal-infos

      - name: Run tests
        run: bash ./coverage.sh && bash <(curl -s https://codecov.io/bash)
